name: Build Android APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    # Check out the code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Setup Python
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    # Install dependencies
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3-pip git zip unzip openjdk-17-jdk
        pip install --upgrade pip
        pip install kivy
        pip install buildozer
        pip install yt-dlp  # Install yt-dlp instead of pytube

    # Modify buildozer.spec automatically
    - name: Modify buildozer.spec dynamically
      run: |
        # Mengedit buildozer.spec
        sed -i 's/requirements = python3,kivy/pytube/requirements = python3,kivy,yt-dlp/' buildozer.spec
        sed -i 's/android.permissions = INTERNET/android.permissions = INTERNET,WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE/' buildozer.spec
        sed -i 's/android.api = 29/android.api = 29/' buildozer.spec
        sed -i 's/android.minapi = 21/android.minapi = 21/' buildozer.spec
        sed -i 's/android.sdk = 29/android.sdk = 29/' buildozer.spec
        sed -i 's/android.arch = armeabi-v7a/android.arch = armeabi-v7a/' buildozer.spec

    # Build APK with Buildozer
    - name: Build APK with Buildozer
      run: |
        buildozer -v android debug

    # Upload APK as an artifact (optional)
    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: YTDownloaderApp-debug.apk
        path: bin/YTDownloaderApp-debug.apk
        
